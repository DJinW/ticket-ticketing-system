{"remainingRequest":"C:\\Users\\安姿铜\\Desktop\\TrainTicketSystem-master\\vue-manage-system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\安姿铜\\Desktop\\TrainTicketSystem-master\\vue-manage-system\\src\\api\\index.js","dependencies":[{"path":"C:\\Users\\安姿铜\\Desktop\\TrainTicketSystem-master\\vue-manage-system\\src\\api\\index.js","mtime":1617708212000},{"path":"C:\\Users\\安姿铜\\Desktop\\TrainTicketSystem-master\\vue-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1695300880332},{"path":"C:\\Users\\安姿铜\\Desktop\\TrainTicketSystem-master\\vue-manage-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1695300879325}],"contextDependencies":[],"result":["import request from \"../utils/request\";\nimport service from \"../utils/request\";\nimport qs from 'qs';\nexport var fetchData = function fetchData(query) {\n  return request({\n    url: './table.json',\n    method: 'get',\n    params: query\n  });\n};\n/**\n * 封装get方法\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function fetch(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    request.get(url, {\n      params: params\n    }).then(function (response) {\n      resolve(response.data);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n}\n/**\n * 封装post请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    service.post(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}\n/**\n * 封装patch请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function patch(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.patch(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}\n/**\n * 封装put请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function put(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    service.put(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}",{"version":3,"sources":["C:/Users/安姿铜/Desktop/TrainTicketSystem-master/vue-manage-system/src/api/index.js"],"names":["request","service","qs","fetchData","query","url","method","params","fetch","Promise","resolve","reject","get","then","response","data","catch","err","post","patch","axios","put"],"mappings":"AAAA,OAAOA,OAAP;AACA,OAAOC,OAAP;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAC9B,SAAOJ,OAAO,CAAC;AACXK,IAAAA,GAAG,EAAE,cADM;AAEXC,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,MAAM,EAAEH;AAHG,GAAD,CAAd;AAKH,CANM;AAQP;;;;;;;AAMA,OAAO,SAASI,KAAT,CAAeH,GAAf,EAAiC;AAAA,MAAbE,MAAa,uEAAJ,EAAI;AACpC,SAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCX,IAAAA,OAAO,CAACY,GAAR,CAAYP,GAAZ,EAAiB;AACTE,MAAAA,MAAM,EAAEA;AADC,KAAjB,EAGKM,IAHL,CAGU,UAAAC,QAAQ,EAAI;AACdJ,MAAAA,OAAO,CAACI,QAAQ,CAACC,IAAV,CAAP;AACH,KALL,EAMKC,KANL,CAMW,UAAAC,GAAG,EAAI;AACVN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KARL;AASH,GAVM,CAAP;AAWH;AAGD;;;;;;;AAMA,OAAO,SAASC,IAAT,CAAcb,GAAd,EAA8B;AAAA,MAAXU,IAAW,uEAAJ,EAAI;AACjC,SAAO,IAAIN,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,IAAAA,OAAO,CAACiB,IAAR,CAAab,GAAb,EAAkBU,IAAlB,EACKF,IADL,CACU,UAAAC,QAAQ,EAAI;AACdJ,MAAAA,OAAO,CAACI,QAAQ,CAACC,IAAV,CAAP;AACH,KAHL,EAGO,UAAAE,GAAG,EAAI;AACNN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KALL;AAMH,GAPM,CAAP;AAQH;AAED;;;;;;;AAMA,OAAO,SAASE,KAAT,CAAed,GAAf,EAA+B;AAAA,MAAXU,IAAW,uEAAJ,EAAI;AAClC,SAAO,IAAIN,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCS,IAAAA,KAAK,CAACD,KAAN,CAAYd,GAAZ,EAAiBU,IAAjB,EACKF,IADL,CACU,UAAAC,QAAQ,EAAI;AACdJ,MAAAA,OAAO,CAACI,QAAQ,CAACC,IAAV,CAAP;AACH,KAHL,EAGO,UAAAE,GAAG,EAAI;AACNN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KALL;AAMH,GAPM,CAAP;AAQH;AAED;;;;;;;AAMA,OAAO,SAASI,GAAT,CAAahB,GAAb,EAA6B;AAAA,MAAXU,IAAW,uEAAJ,EAAI;AAChC,SAAO,IAAIN,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCV,IAAAA,OAAO,CAACoB,GAAR,CAAYhB,GAAZ,EAAiBU,IAAjB,EACKF,IADL,CACU,UAAAC,QAAQ,EAAI;AACdJ,MAAAA,OAAO,CAACI,QAAQ,CAACC,IAAV,CAAP;AACH,KAHL,EAGO,UAAAE,GAAG,EAAI;AACNN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KALL;AAMH,GAPM,CAAP;AAQH","sourcesContent":["import request from '../utils/request';\nimport service from '../utils/request';\nimport qs from 'qs'\nexport const fetchData = query => {\n    return request({\n        url: './table.json',\n        method: 'get',\n        params: query\n    });\n};\n\n/**\n * 封装get方法\n * @param url\n * @param data\n * @returns {Promise}\n */\nexport function fetch(url, params = {}) {\n    return new Promise((resolve, reject) => {\n        request.get(url, {\n                params: params\n            })\n            .then(response => {\n                resolve(response.data);\n            })\n            .catch(err => {\n                reject(err)\n            })\n    })\n}\n\n\n/**\n * 封装post请求\n * @param url\n * @param data\n * @returns {Promise}\n */\nexport function post(url, data = {}) {\n    return new Promise((resolve, reject) => {\n        service.post(url, data)\n            .then(response => {\n                resolve(response.data);\n            }, err => {\n                reject(err)\n            })\n    })\n}\n\n/**\n * 封装patch请求\n * @param url\n * @param data\n * @returns {Promise}\n */\nexport function patch(url, data = {}) {\n    return new Promise((resolve, reject) => {\n        axios.patch(url, data)\n            .then(response => {\n                resolve(response.data);\n            }, err => {\n                reject(err)\n            })\n    })\n}\n\n/**\n * 封装put请求\n * @param url\n * @param data\n * @returns {Promise}\n */\nexport function put(url, data = {}) {\n    return new Promise((resolve, reject) => {\n        service.put(url, data)\n            .then(response => {\n                resolve(response.data);\n            }, err => {\n                reject(err)\n            })\n    })\n}"]}]}